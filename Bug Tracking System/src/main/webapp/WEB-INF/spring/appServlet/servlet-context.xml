<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	
	xsi:schemaLocation=" http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- DispatcherServlet Context: определяет настройки одного сервлета; бины, 
		которые доступны только ему -->
	<!-- Разрешаем использование аннотаций Spring MVC (то есть @Controller и.т.д) -->
	<mvc:annotation-driven />
	
	<!-- Отображение видов на jsp-файлы, лежащие в папке /WEB-INF/views <beans:bean 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->
	
	<!-- Всю статику (изображения, css-файлы, javascript) положим в папку webapp/resources 
		и замаппим их на урл вида /resources/** -->
			
	<mvc:resources mapping="/resources/**" location="/resources/"/>
	
	<!-- beans for custom hasPremission() in @preAuthorize -->
		
	<bean id="permissionEvaluator" class="security.BasePermissionEvaluator"/> 
	
	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">     
		<property name="permissionEvaluator" ref="permissionEvaluator"/> 
	</bean>     
	
	<sec:global-method-security pre-post-annotations="enabled">
		<sec:expression-handler ref="expressionHandler"/>
	</sec:global-method-security>
	
	
	<!-- Файл с настройками контроллеров -->
	<import resource="controllers.xml" />
	
	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	
	
	<beans:bean
		class="exception.CustomExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:map>
				<beans:entry key="java.lang.Exception" value="/exception" />
			</beans:map>
		</beans:property>
	</beans:bean>

	
	

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
	</bean>

	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="completeAutoload" value="true" />
	</bean> 

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.tiles2.TilesView</value>
		</property>
		<property name="order" value="0" />
	</bean>
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
	
</beans>


	
	
	
